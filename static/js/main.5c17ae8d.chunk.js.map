{"version":3,"sources":["components/Dialogues/Dialogue/Dialogue.jsx","utils/object-helpers.js","redux/users-reducer.js","components/Dialogues/Message/ReceivedMessage.module.css","components/Dialogues/Message/SentMessage.module.css","api/api.js","components/Dialogues/Dialogue/Chat.module.css","reportWebVitals.js","redux/auth-reducer.js","redux/app-reducer.js","redux/dialogues-reducer.js","redux/redux-store.js","components/FormValidation/LoginFormSchema.js","components/Login/Login.jsx","img/icons/navbar/profile.svg","img/icons/navbar/messages.svg","img/icons/navbar/users.svg","img/icons/navbar/log-out.svg","components/Navbar/Navbar.jsx","components/Navbar/NavbarContainer.jsx","img/icons/header/sign-in.svg","components/Header/Header.jsx","components/Header/HeaderContainer.jsx","components/Dialogues/Message/ReceivedMessage.jsx","components/Dialogues/Message/SentMessage.jsx","components/Dialogues/Dialogue/Chat.jsx","components/Dialogues/Dialogue/ChatContainer.jsx","App.js","index.js","components/Login/Login.module.css","components/Navbar/Navbar.module.css","components/Header/Header.module.css","App.module.css","components/Dialogues/Dialogue/Dialogue.module.css","img/icons/users/default-profile-picture.png","redux/profile-reducer.js","img/icons/users/preloader.svg","components/common/Preloader/Preloader.js"],"names":["Dialogue","props","path","id","to","className","isActive","s","active","dialogue","name","updateObjectInArray","items","itemId","objPropName","newObjProps","map","i","FOLLOW","UNFOLLOW","SET_USERS","SET_CURRENT_PAGE","SET_TOTAL_ITEMS_COUNT","TOGGLE_IS_FETCHING","TOGGLE_IS_FOLLOWING_PROGRESS","initialState","users","pageSize","totalItemsCount","currentPage","isFetching","followingInProgress","followSuccess","userId","type","unfollowSuccess","setCurrentPage","toggleIsFetching","toggleFollowingProgress","requestUsers","page","dispatch","a","usersAPI","getUsers","response","data","count","totalCount","followUnfollowFlow","apiMethod","actionCreator","resultCode","follow","followUser","bind","unfollow","unfollowUser","usersReducer","state","action","followed","filter","module","exports","instance","axios","create","withCredentials","baseURL","headers","profileAPI","getProfile","get","getStatus","updateStatus","status","put","savePhoto","photoFile","formData","FormData","append","post","delete","authAPI","getAuth","login","email","password","logout","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","SET_USER_DATA","SET_PROFILE_THUMBNAIL","isAuth","profile","setProfileThumbnail","setAuthUserData","payload","getAuthUserData","authReducer","INITIALIZED_SUCCESS","initialized","appReducer","SEND_MESSAGE","UPDATE_NEW_MESSAGE_TEXT","dialogues","messages","receivedMessages","message","sentMessages","newMessageText","dialoguesReducer","newMessage","length","newText","reducers","combineReducers","profilePage","profileReducer","dialoguesPage","usersPage","auth","app","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunkMiddleware","__store__","loginFormSchema","yup","shape","required","typeError","LoginForm","onSubmit","initialValues","validateOnChange","validateOnBlur","validationSchema","values","handleChange","handleBlur","isValid","handleSubmit","dirty","onChange","onBlur","value","field","meta","touched","error","placeholder","autoComplete","general","incorrect","disabled","onClick","connect","setFieldValue","join","content_block","caution","caution_data","Navbar","nav","nav_top","nav_profile","src","alt","nav_messages","nav_users","nav_logOut","log_out","NavbarContainer","this","React","Component","Header","header_top","header_left","small","def_profile","not_auth","sign_in","HeaderContainer","ReceivedMessage","receivedMessage","SentMessage","sentMessage","Chat","dialoguesElements","d","receivedMessagesElements","r","sentMessagesElements","navigate","useNavigate","allChats","chatsColumns","messagesBlock","typeMessage","autoFocus","e","text","target","updateNewMessageText","onKeyDown","key","shiftKey","preventDefault","sendMessage","ChatContainer","updateNewMessageTextCreator","ProfileContainer","lazy","DialoguesContainer","UsersContainer","App","initializeApp","bg_header","app_wrapper","content","fallback","element","Preloader","AppContainer","promise","Promise","all","LotusNetworkApp","ReactDOM","render","document","getElementById","ADD_POST","DELETE_POST","UPDATE_NEW_POST_TEXT","SET_USER_PROFILE","SET_STATUS","SAVE_PHOTO_SUCCESS","posts","likes","newPostText","addPostCreator","updateNewPostTextCreator","setStatus","file","photos","newPost","p","preloader"],"mappings":"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","file":"static/js/main.5c17ae8d.chunk.js","sourcesContent":["import s from \"./Dialogue.module.css\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nconst Dialogue = (props) => {\r\n\tlet path = `/messages/${props.id}`;\r\n\treturn (\r\n\t\t<NavLink to={path} className={({ isActive }) => isActive ? `${s.active}` : `${s.dialogue}`}>{props.name}</NavLink>\r\n\t);\r\n}\r\n\r\nexport default Dialogue;","export const updateObjectInArray = (items, itemId, objPropName, newObjProps) => {\r\n\treturn items.map(i => {\r\n\t\tif (i[objPropName] === itemId) {\r\n\t\t\treturn { ...i, ...newObjProps };\r\n\t\t}\r\n\t\treturn i;\r\n\t});\r\n};","import { usersAPI } from \"../api/api\";\r\nimport { updateObjectInArray } from \"../utils/object-helpers\";\r\n\r\nconst FOLLOW = \"lotus-network/users/FOLLOW\";\r\nconst UNFOLLOW = \"lotus-network/users/UNFOLLOW\";\r\nconst SET_USERS = \"lotus-network/users/SET_USERS\";\r\nconst SET_CURRENT_PAGE = \"lotus-network/users/SET_CURRENT_PAGE\";\r\nconst SET_TOTAL_ITEMS_COUNT = \"lotus-network/users/SET_TOTAL_ITEMS_COUNT\";\r\nconst TOGGLE_IS_FETCHING = \"lotus-network/users/TOGGLE_IS_FETCHING\";\r\nconst TOGGLE_IS_FOLLOWING_PROGRESS = \"lotus-network/users/TOGGLE_IS_FOLLOWING_PROGRESS\";\r\n\r\nlet initialState = {\r\n\tusers: [],\r\n\tpageSize: 50,\r\n\ttotalItemsCount: 0,\r\n\tcurrentPage: 1,\r\n\tisFetching: true,\r\n\tfollowingInProgress: []\r\n};\r\n\r\nconst usersReducer = (state = initialState, action) => {\r\n\tswitch (action.type) {\r\n\t\tcase FOLLOW:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tusers: updateObjectInArray(state.users, action.userId, \"id\", { followed: true })\r\n\t\t\t};\r\n\t\tcase UNFOLLOW:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tusers: updateObjectInArray(state.users, action.userId, \"id\", { followed: false })\r\n\t\t\t};\r\n\t\tcase SET_USERS:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tusers: action.users\r\n\t\t\t}\r\n\t\tcase SET_CURRENT_PAGE:\r\n\t\t\treturn {\r\n\t\t\t\t...state, currentPage: action.currentPage\r\n\t\t\t}\r\n\t\tcase SET_TOTAL_ITEMS_COUNT:\r\n\t\t\treturn {\r\n\t\t\t\t...state, totalItemsCount: action.count\r\n\t\t\t}\r\n\t\tcase TOGGLE_IS_FETCHING:\r\n\t\t\treturn {\r\n\t\t\t\t...state, isFetching: action.isFetching\r\n\t\t\t}\r\n\t\tcase TOGGLE_IS_FOLLOWING_PROGRESS:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tfollowingInProgress: action.isFetching\r\n\t\t\t\t\t? [...state.followingInProgress, action.userId]\r\n\t\t\t\t\t: state.followingInProgress.filter(id => id !== action.userId)\r\n\t\t\t}\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n};\r\n\r\nexport const followSuccess = (userId) => ({ type: FOLLOW, userId });\r\nexport const unfollowSuccess = (userId) => ({ type: UNFOLLOW, userId });\r\nexport const setUsers = (users) => ({ type: SET_USERS, users });\r\nexport const setCurrentPage = (currentPage) => ({ type: SET_CURRENT_PAGE, currentPage });\r\nexport const setTotalItemsCount = (count) => ({ type: SET_TOTAL_ITEMS_COUNT, count });\r\nexport const toggleIsFetching = (isFetching) => ({ type: TOGGLE_IS_FETCHING, isFetching });\r\nexport const toggleFollowingProgress = (isFetching, userId) => ({\r\n\ttype: TOGGLE_IS_FOLLOWING_PROGRESS, isFetching, userId\r\n});\r\n\r\nexport const requestUsers = (page, pageSize) => async (dispatch) => {\r\n\tdispatch(toggleIsFetching(true));\r\n\tdispatch(setCurrentPage(page));\r\n\tlet response = await usersAPI.getUsers(page, pageSize);\r\n\tdispatch(toggleIsFetching(false));\r\n\tdispatch(setUsers(response.data.items));\r\n\tdispatch(setTotalItemsCount(response.data.totalCount));\r\n};\r\n\r\nconst followUnfollowFlow = async (dispatch, userId, apiMethod, actionCreator) => {\r\n\tdispatch(toggleFollowingProgress(true, userId));\r\n\tlet response = await apiMethod(userId);\r\n\tif (response.data.resultCode === 0) {\r\n\t\tdispatch(actionCreator(userId));\r\n\t}\r\n\tdispatch(toggleFollowingProgress(false, userId));\r\n};\r\n\r\nexport const follow = (userId) => async (dispatch) => {\r\n\tfollowUnfollowFlow(dispatch, userId, usersAPI.followUser.bind(usersAPI), followSuccess);\r\n};\r\n\r\nexport const unfollow = (userId) => async (dispatch) => {\r\n\tfollowUnfollowFlow(dispatch, userId, usersAPI.unfollowUser.bind(usersAPI), unfollowSuccess);\r\n};\r\n\r\nexport default usersReducer;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"message\":\"ReceivedMessage_message__2WHaO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"message\":\"SentMessage_message__16aKF\"};","import axios from \"axios\";\r\n\r\nconst instance = axios.create({\r\n\twithCredentials: true,\r\n\tbaseURL: \"https://social-network.samuraijs.com/api/1.0/\",\r\n\theaders: {\r\n\t\t\"API-KEY\": \"140d028e-900b-45d6-98cd-b35fe1f3597d\" // Lotus\r\n\t}\r\n});\r\n\r\nexport const profileAPI = {\r\n\tgetProfile(userId) { return instance.get(`profile/${userId}`); },\r\n\tgetStatus(userId) { return instance.get(`profile/status/${userId}`); },\r\n\tupdateStatus(status) { return instance.put(`profile/status`, { status }); },\r\n\tsavePhoto(photoFile) {\r\n\t\tconst formData = new FormData();\r\n\t\tformData.append(\"image\", photoFile);\r\n\t\treturn instance.put(`profile/photo`, formData, {\r\n\t\t\theaders: {\r\n\t\t\t\t\"Content-Type\": \"multipart/form-data\"\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n};\r\n\r\nexport const usersAPI = {\r\n\tgetUsers(currentPage = 1, pageSize = 50) { return instance.get(`users?page=${currentPage}&count=${pageSize}`); },\r\n\tfollowUser(userId) { return instance.post(`follow/${userId}`); },\r\n\tunfollowUser(userId) { return instance.delete(`follow/${userId}`); }\r\n};\r\n\r\nexport const authAPI = {\r\n\tgetAuth() { return instance.get(`auth/me`); },\r\n\tlogin(email, password) {\r\n\t\treturn instance.post(`auth/login`, { email, password });\r\n\t},\r\n\tlogout() { return instance.delete(`auth/login`); }\r\n};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content_block\":\"Chat_content_block__PcvgJ\",\"allChats\":\"Chat_allChats__2YmPQ\",\"chatsColumns\":\"Chat_chatsColumns__3iDzt\",\"dialogues\":\"Chat_dialogues__1HJAN\",\"messagesBlock\":\"Chat_messagesBlock__nlg-M\",\"messages\":\"Chat_messages__pqjlb\",\"sentMessages\":\"Chat_sentMessages__1rvLv\",\"receivedMessages\":\"Chat_receivedMessages__3sL3o\",\"typeMessage\":\"Chat_typeMessage__2nRko\"};","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import { authAPI } from \"../api/api\";\r\n\r\nconst SET_USER_DATA = \"lotus-network/auth/SET_USER_DATA\";\r\nconst SET_PROFILE_THUMBNAIL = \"lotus-network/auth/SET_PROFILE_THUMBNAIL\";\r\n\r\nlet initialState = {\r\n\tid: null,\r\n\tlogin: null,\r\n\temail: null,\r\n\tisAuth: false,\r\n\tprofile: \"\"\r\n};\r\n\r\nconst authReducer = (state = initialState, action) => {\r\n\tswitch (action.type) {\r\n\t\tcase SET_USER_DATA:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\t...action.payload\r\n\t\t\t};\r\n\t\tcase SET_PROFILE_THUMBNAIL:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tprofile: action.profile,\r\n\t\t\t};\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n};\r\n\r\nexport const setProfileThumbnail = (profile) => ({ type: SET_PROFILE_THUMBNAIL, profile });\r\nexport const setAuthUserData = (id, login, email, isAuth) => ({\r\n\ttype: SET_USER_DATA,\r\n\tpayload: { id, login, email, isAuth }\r\n});\r\n\r\nexport const getAuthUserData = () => async (dispatch) => {\r\n\tlet response = await authAPI.getAuth();\r\n\tif (response.data.resultCode === 0) {\r\n\t\tlet { id, login, email } = response.data.data;\r\n\t\tdispatch(setAuthUserData(id, login, email, true));\r\n\t\tdispatch(setProfileThumbnail(response.data.data.id));\r\n\t}\r\n};\r\n\r\nexport const login = (email, password, setFieldValue) => async (dispatch) => {\r\n\tlet response = await authAPI.login(email, password);\r\n\tif (response.data.resultCode === 0) {\r\n\t\tdispatch(getAuthUserData());\r\n\t} else {\r\n\t\tsetFieldValue(\"general\", response.data.messages.join(\" \"))\r\n\t}\r\n};\r\n\r\nexport const logout = () => async (dispatch) => {\r\n\tlet response = await authAPI.logout();\r\n\tif (response.data.resultCode === 0) {\r\n\t\tdispatch(setAuthUserData(null, null, null, false));\r\n\t}\r\n};\r\n\r\nexport default authReducer;","import { getAuthUserData } from \"./auth-reducer\";\r\n\r\nconst INITIALIZED_SUCCESS = \"lotus-network/app/INITIALIZED_SUCCESS\";\r\n\r\nlet initialState = {\r\n\tinitialized: false\r\n};\r\n\r\nconst appReducer = (state = initialState, action) => {\r\n\tswitch (action.type) {\r\n\t\tcase INITIALIZED_SUCCESS:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tinitialized: true\r\n\t\t\t};\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n};\r\n\r\nexport const initializedSuccess = () => ({\r\n\ttype: INITIALIZED_SUCCESS\r\n});\r\n\r\nexport const initializeApp = () => (dispatch) => {\r\n\tlet promise = dispatch(getAuthUserData());\r\n\r\n\tPromise.all([promise])\r\n\t\t.then(() => {\r\n\t\t\tdispatch(initializedSuccess());\r\n\t\t});\r\n};\r\n\r\nexport default appReducer;","const SEND_MESSAGE = \"lotus-network/dialogues/SEND_MESSAGE\";\r\nconst UPDATE_NEW_MESSAGE_TEXT = \"lotus-network/dialogues/UPDATE_NEW_MESSAGE_TEXT\";\r\n\r\nlet initialState = {\r\n\tdialogues: [\r\n\t\t{ id: 0, name: \"Saved Messages\" },\r\n\t\t{ id: 1, name: \"Roman Shcherbyna\" },\r\n\t\t{ id: 2, name: \"Artem Shcherbyna\" },\r\n\t\t{ id: 3, name: \"Alina Matnurova\" },\r\n\t\t{ id: 4, name: \"Ira Ulchich\" },\r\n\t\t{ id: 5, name: \"Magomed Soltanaliev\" }\r\n\t],\r\n\tmessages: {\r\n\t\treceivedMessages: [\r\n\t\t\t{ id: 0, message: \"Привет\" },\r\n\t\t\t{ id: 1, message: \"Как ты там, нормально?\" },\r\n\t\t\t{\r\n\t\t\t\tid: 2,\r\n\t\t\t\tmessage: \"Я буквально вчера удалил некоторых друзей в Стиме, которые в сети не появлялись 1-2 года. Мне даже как-то грустно немного было\"\r\n\t\t\t}\r\n\t\t],\r\n\t\tsentMessages: [\r\n\t\t\t{ id: 0, message: \"да, всё гуд!\" },\r\n\t\t\t{ id: 1, message: \"привет\" }\r\n\t\t]\r\n\t},\r\n\tnewMessageText: \"\"\r\n};\r\n\r\nconst dialoguesReducer = (state = initialState, action) => {\r\n\tswitch (action.type) {\r\n\t\tcase SEND_MESSAGE:\r\n\t\t\tlet newMessage = {\r\n\t\t\t\tid: state.messages.sentMessages.length,\r\n\t\t\t\tmessage: state.newMessageText\r\n\t\t\t};\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tmessages: {\r\n\t\t\t\t\t...state.messages,\r\n\t\t\t\t\tsentMessages: [...state.messages.sentMessages, newMessage]\r\n\t\t\t\t},\r\n\t\t\t\tnewMessageText: \"\"\r\n\t\t\t};\r\n\t\tcase UPDATE_NEW_MESSAGE_TEXT:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tnewMessageText: action.newText\r\n\t\t\t};\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n};\r\n\r\nexport const sendMessageCreator = () => ({\r\n\ttype: SEND_MESSAGE\r\n});\r\n\r\nexport const updateNewMessageTextCreator = (text) => ({\r\n\ttype: UPDATE_NEW_MESSAGE_TEXT,\r\n\tnewText: text\r\n});\r\n\r\nexport default dialoguesReducer;","import { applyMiddleware, combineReducers, compose, createStore } from \"redux\";\r\nimport profileReducer from \"./profile-reducer\";\r\nimport dialoguesReducer from \"./dialogues-reducer\";\r\nimport usersReducer from \"./users-reducer\";\r\nimport authReducer from \"./auth-reducer\";\r\nimport appReducer from \"./app-reducer\";\r\nimport thunkMiddleware from \"redux-thunk\";\r\n\r\nlet reducers = combineReducers({\r\n\tprofilePage: profileReducer,\r\n\tdialoguesPage: dialoguesReducer,\r\n\tusersPage: usersReducer,\r\n\tauth: authReducer,\r\n\tapp: appReducer\r\n});\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(reducers, composeEnhancers(applyMiddleware(thunkMiddleware)));\r\n\r\nwindow.__store__ = store;\r\n\r\nexport default store;","import * as yup from \"yup\";\r\n\r\nconst loginFormSchema = yup.object().shape({\r\n\temail: yup.string().email(\"Enter proper e-mail\").required(\"Required field\"),\r\n\tpassword: yup.string().typeError(\"Should be a string\").required(\"fsdf\")\r\n});\r\n\r\nexport default loginFormSchema;","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Navigate } from \"react-router-dom\";\r\nimport { Field, Form, Formik } from \"formik\";\r\nimport { login } from \"../../redux/auth-reducer\"\r\nimport loginFormSchema from \"../FormValidation/LoginFormSchema\";\r\nimport s from \"./Login.module.css\"\r\n\r\nconst LoginForm = ({onSubmit}) => {\r\n\treturn <div className={s.login}>\r\n\t\t<Formik\r\n\t\t\tinitialValues={{ email: \"\", password: \"\" }}\r\n\t\t\tvalidateOnChange\r\n\t\t\tvalidateOnBlur\r\n\t\t\tonSubmit={onSubmit}\r\n\t\t\tvalidationSchema={loginFormSchema}\r\n\t\t>\r\n\t\t\t{({ values, handleChange, handleBlur, isValid, handleSubmit, dirty }) => (\r\n\t\t\t\t<Form>\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t<Field\r\n\t\t\t\t\t\t\tname={\"email\"}\r\n\t\t\t\t\t\t\tonChange={handleChange}\r\n\t\t\t\t\t\t\tonBlur={handleBlur}\r\n\t\t\t\t\t\t\tvalue={values.email}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t{({\r\n\t\t\t\t\t\t\t\tfield,\r\n\t\t\t\t\t\t\t\tmeta: { touched, error }\r\n\t\t\t\t\t\t\t}) => <input\r\n\t\t\t\t\t\t\t\t\ttype={\"text\"}\r\n\t\t\t\t\t\t\t\t\tclassName={touched && error ? s.error : \"\"}\r\n\t\t\t\t\t\t\t\t\tplaceholder={\"Email\"}\r\n\t\t\t\t\t\t\t\t\tautoComplete={\"off\"}\r\n\t\t\t\t\t\t\t\t\t{...field} />\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t</Field>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t<Field\r\n\t\t\t\t\t\t\tname={\"password\"}\r\n\t\t\t\t\t\t\tonChange={handleChange}\r\n\t\t\t\t\t\t\tonBlur={handleBlur}\r\n\t\t\t\t\t\t\tvalue={values.password}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t{({\r\n\t\t\t\t\t\t\t\tfield,\r\n\t\t\t\t\t\t\t\tmeta: { touched, error }\r\n\t\t\t\t\t\t\t}) => <input\r\n\t\t\t\t\t\t\t\t\ttype={\"password\"}\r\n\t\t\t\t\t\t\t\t\tclassName={touched && error ? s.error : \"\"}\r\n\t\t\t\t\t\t\t\t\tplaceholder={\"Password\"}\r\n\t\t\t\t\t\t\t\t\t{...field} />\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t</Field>\r\n\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t{values.general ? <div className={s.incorrect}>{values.general}</div> : \"\"}\r\n\r\n\t\t\t\t\t<button\r\n\t\t\t\t\t\tdisabled={!isValid && !dirty}\r\n\t\t\t\t\t\tonClick={handleSubmit}\r\n\t\t\t\t\t\ttype={\"submit\"}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\tSign In\r\n\t\t\t\t\t</button>\r\n\t\t\t\t</Form>\r\n\t\t\t)}\r\n\t\t</Formik>\r\n\t</div >\r\n};\r\n\r\nconst Login = ({login, isAuth}) => {\r\n\tconst onSubmit = (values, { setFieldValue }) => {\r\n\t\tlogin(values.email, values.password, setFieldValue);\r\n\t};\r\n\r\n\tif (isAuth) {\r\n\t\treturn <Navigate to=\"/profile\" />;\r\n\t}\r\n\r\n\treturn <div className={s.content_block}>\r\n\t\t<div className={s.caution}>\r\n\t\t\t<div>Use this email and password to login to your test account:</div>\r\n\t\t\t<div className={s.caution_data}>\r\n\t\t\t\t<div>hypno7ie@gmail.com</div>\r\n\t\t\t\t<div>lotus-network-test</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t\t<LoginForm onSubmit={onSubmit} />\r\n\t</div>;\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n\tisAuth: state.auth.isAuth\r\n});\r\n\r\nexport default connect(mapStateToProps, { login })(Login);","export default __webpack_public_path__ + \"static/media/profile.b93318bc.svg\";","export default __webpack_public_path__ + \"static/media/messages.672faa28.svg\";","export default __webpack_public_path__ + \"static/media/users.2763681d.svg\";","export default __webpack_public_path__ + \"static/media/log-out.d16a1169.svg\";","import s from \"./Navbar.module.css\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport profile from \"../../img/icons/navbar/profile.svg\";\r\nimport messages from \"../../img/icons/navbar/messages.svg\";\r\nimport users from \"../../img/icons/navbar/users.svg\";\r\nimport log_out from \"../../img/icons/navbar/log-out.svg\";\r\n// import news from \"../../img/icons/navbar/news.svg\";\r\n// import music from \"../../img/icons/navbar/music.svg\";\r\n// import settings from \"../../img/icons/navbar/settings.svg\";\r\n\r\n// let logOut = () => {\r\n// \tlet wnd = window.open(\"https://social-network.samuraijs.com/Auth/Auth/LogOut\");\r\n// \tsetTimeout(function () {\r\n// \t\twnd.close();\r\n// \t}, 10);\r\n// \treturn false;\r\n// };\r\n\r\nconst Navbar = (props) => {\r\n\treturn (\r\n\t\t<nav className={s.nav}>\r\n\t\t\t<div className={s.nav_top}>\r\n\t\t\t\t{props.isAuth\r\n\t\t\t\t\t? <div>\r\n\t\t\t\t\t\t<NavLink to=\"/profile\" className={s.nav_profile}>\r\n\t\t\t\t\t\t\t<img src={profile} alt=\"Profile\" />\r\n\t\t\t\t\t\t\t<div>Profile</div>\r\n\t\t\t\t\t\t</NavLink>\r\n\t\t\t\t\t\t<NavLink to=\"/messages\" className={s.nav_messages}>\r\n\t\t\t\t\t\t\t<img src={messages} alt=\"Messages\" />\r\n\t\t\t\t\t\t\t<div>Messages</div>\r\n\t\t\t\t\t\t</NavLink>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t: \"\"\r\n\t\t\t\t}\r\n\t\t\t\t<NavLink to=\"/users\" className={s.nav_users}>\r\n\t\t\t\t\t<img src={users} alt=\"Users\" />\r\n\t\t\t\t\t<div>Users</div>\r\n\t\t\t\t</NavLink>\r\n\t\t\t\t{/* <NavLink to=\"/news\" className={s.nav_news}>\r\n\t\t\t\t\t<img src={news} alt=\"News\" />\r\n\t\t\t\t\t<div>News</div>\r\n\t\t\t\t</NavLink>\r\n\t\t\t\t<NavLink to=\"/music\" className={s.nav_music}>\r\n\t\t\t\t\t<img src={music} alt=\"Music\" />\r\n\t\t\t\t\t<div>Music</div>\r\n\t\t\t\t</NavLink> */}\r\n\t\t\t</div>\r\n\t\t\t<div>\r\n\t\t\t\t{/* <NavLink to=\"/settings\" className={s.nav_settings}>\r\n\t\t\t\t\t<img src={settings} alt=\"Settings\" />\r\n\t\t\t\t\t<div>Settings</div>\r\n\t\t\t\t</NavLink> */}\r\n\t\t\t\t{props.isAuth\r\n\t\t\t\t\t? <div className={s.nav_logOut} onClick={\r\n\t\t\t\t\t\t// () => {\r\n\t\t\t\t\t\t// \tlogOut();\r\n\t\t\t\t\t\t// \tsetTimeout(function () {\r\n\t\t\t\t\t\t// \t\twindow.location.reload();\r\n\t\t\t\t\t\t// \t}, 10);\r\n\t\t\t\t\t\t// }\r\n\t\t\t\t\t\tprops.logout\r\n\t\t\t\t\t}>\r\n\t\t\t\t\t\t<img src={log_out} alt=\"Log Out\" />\r\n\t\t\t\t\t\t<div>Log Out</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t: \"\"\r\n\t\t\t\t}\r\n\t\t\t</div>\r\n\t\t</nav >\r\n\t);\r\n}\r\n\r\nexport default Navbar;","import React from \"react\";\r\nimport Navbar from \"./Navbar\";\r\nimport { connect } from \"react-redux\";\r\nimport { logout } from \"./../../redux/auth-reducer\";\r\n\r\nclass NavbarContainer extends React.Component {\r\n\trender() {\r\n\t\treturn <Navbar {...this.props} />;\r\n\t}\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n\tisAuth: state.auth.isAuth,\r\n});\r\n\r\nexport default connect(mapStateToProps, { logout })(NavbarContainer);","export default __webpack_public_path__ + \"static/media/sign-in.2355c785.svg\";","import s from \"./Header.module.css\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport def_profile from \"../../img/icons/users/default-profile-picture.png\"\r\nimport sign_in from \"../../img/icons/header/sign-in.svg\"\r\n\r\nconst Header = (props) => {\r\n\treturn (\r\n\t\t<header className={s.header_top}>\r\n\t\t\t<div className={s.header_left}>\r\n\t\t\t\t{props.isAuth\r\n\t\t\t\t\t? <NavLink to=\"/profile\">\r\n\t\t\t\t\t\t<img src=\"https://pbs.twimg.com/media/Cpucd9vWYAAjy-D.png\" alt=\"Lotus Network\" />\r\n\t\t\t\t\t\t<h1>Lotus Network</h1>\r\n\t\t\t\t\t</NavLink>\r\n\t\t\t\t\t: <NavLink to=\"/login\">\r\n\t\t\t\t\t\t<img src=\"https://pbs.twimg.com/media/Cpucd9vWYAAjy-D.png\" alt=\"Lotus Network\" />\r\n\t\t\t\t\t\t<h1>Lotus Network</h1>\r\n\t\t\t\t\t</NavLink>\r\n\t\t\t\t}\r\n\t\t\t</div>\r\n\t\t\t{props.isAuth\r\n\t\t\t\t? <div className={s.auth}>\r\n\t\t\t\t\t<NavLink to={\"/profile\"}>\r\n\t\t\t\t\t\t<img src={props.profile.small ? props.profile.small : def_profile} alt=\"Profile\" />\r\n\t\t\t\t\t\t{props.login}\r\n\t\t\t\t\t</NavLink>\r\n\t\t\t\t</div>\r\n\t\t\t\t: <div className={s.not_auth}>\r\n\t\t\t\t\t<NavLink to=\"/login\">\r\n\t\t\t\t\t\t<img src={sign_in} alt=\"Sign In\" />\r\n\t\t\t\t\t\t<p>Sign In</p>\r\n\t\t\t\t\t</NavLink>\r\n\t\t\t\t</div>\r\n\t\t\t}\r\n\t\t</header>\r\n\t);\r\n}\r\n\r\nexport default Header;","import React from \"react\";\r\nimport Header from \"./Header\";\r\nimport { connect } from \"react-redux\";\r\n\r\nclass HeaderContainer extends React.Component {\r\n\trender() {\r\n\t\treturn <Header {...this.props} />;\r\n\t}\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n\tisAuth: state.auth.isAuth,\r\n\tlogin: state.auth.login,\r\n\tprofile: state.auth.profile\r\n});\r\n\r\nexport default connect(mapStateToProps, {})(HeaderContainer);","import s from \"./ReceivedMessage.module.css\";\r\n\r\nconst ReceivedMessage = (props) => {\r\n  return (\r\n    <div className={s.message}>\r\n      {props.receivedMessage}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ReceivedMessage;","import s from \"./SentMessage.module.css\";\r\n\r\nconst SentMessage = (props) => {\r\n  return (\r\n    <div className={s.message}>\r\n      {props.sentMessage}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SentMessage;","import { useNavigate } from 'react-router-dom';\r\nimport s from \"./Chat.module.css\";\r\nimport ReceivedMessage from \"../Message/ReceivedMessage\";\r\nimport SentMessage from \"../Message/SentMessage\";\r\nimport Dialogue from \"./Dialogue\";\r\n\r\nconst Chat = (props) => {\r\n\tlet state = props.dialoguesPage;\r\n\r\n\tlet dialoguesElements = state.dialogues.map(d => <Dialogue key={d.id} id={d.id} name={d.name} />);\r\n\r\n\tlet receivedMessagesElements = state.messages.receivedMessages.map(r => <ReceivedMessage key={r.id} id={r.id}\r\n\t\treceivedMessage={r.message} />);\r\n\r\n\tlet sentMessagesElements = state.messages.sentMessages.map(s => <SentMessage key={s.id} id={s.id}\r\n\t\tsentMessage={s.message} />);\r\n\r\n\tlet onMessageChange = (e) => {\r\n\t\tlet text = e.target.value;\r\n\t\tprops.updateNewMessageText(text);\r\n\t};\r\n\r\n\tconst navigate = useNavigate();\r\n\tlet onKeyPress = (e) => {\r\n\t\tif (e.key === \"Enter\" && !e.shiftKey) {\r\n\t\t\te.preventDefault();\r\n\t\t\tif (state.newMessageText) props.sendMessage();\r\n\t\t}\r\n\t\tif (e.key === \"Escape\") {\r\n\t\t\te.preventDefault();\r\n\t\t\tnavigate(\"/messages\");\r\n\t\t}\r\n\t};\r\n\r\n\tlet onSendMessageClick = (e) => {\r\n\t\tif (!e.key && state.newMessageText) props.sendMessage();\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div className={s.content_block}>\r\n\t\t\t<div className={s.allChats}>\r\n\t\t\t\t<div className={s.chatsColumns}>\r\n\t\t\t\t\t<div className={s.dialogues}>\r\n\t\t\t\t\t\t{dialoguesElements}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className={s.messages}>\r\n\t\t\t\t\t\t<div className={s.messagesBlock}>\r\n\t\t\t\t\t\t\t<div className={s.receivedMessages}>\r\n\t\t\t\t\t\t\t\t{receivedMessagesElements}\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div className={s.sentMessages}>\r\n\t\t\t\t\t\t\t\t{sentMessagesElements}\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className={s.typeMessage}>\r\n\t\t\t\t\t\t\t<textarea autoFocus={true} onChange={onMessageChange} onKeyDown={onKeyPress}\r\n\t\t\t\t\t\t\t\tvalue={state.newMessageText} placeholder={\"Write a message...\"} />\r\n\t\t\t\t\t\t\t<button onClick={onSendMessageClick}>↩</button>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default Chat;","import Chat from \"./Chat\";\r\nimport { sendMessageCreator, updateNewMessageTextCreator } from \"../../../redux/dialogues-reducer\";\r\nimport { connect } from \"react-redux\";\r\n\r\nconst mapStateToProps = (state) => {\r\n\treturn {\r\n\t\tdialoguesPage: state.dialoguesPage\r\n\t}\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n\treturn {\r\n\t\tupdateNewMessageText: (text) => dispatch(updateNewMessageTextCreator(text)),\r\n\t\tsendMessage: () => dispatch(sendMessageCreator())\r\n\t}\r\n};\r\n\r\nconst ChatContainer = connect(mapStateToProps, mapDispatchToProps)(Chat);\r\n\r\nexport default ChatContainer;","import React, { Component, Suspense } from \"react\";\r\nimport { compose } from \"redux\";\r\nimport { connect, Provider } from \"react-redux\";\r\nimport { BrowserRouter, Route, Routes } from \"react-router-dom\";\r\nimport { initializeApp } from \"./redux/app-reducer\";\r\nimport store from \"./redux/redux-store\";\r\nimport s from \"./App.module.css\";\r\nimport Login from \"./components/Login/Login\";\r\nimport Preloader from \"./components/common/Preloader/Preloader\";\r\nimport NavbarContainer from \"./components/Navbar/NavbarContainer\";\r\nimport HeaderContainer from \"./components/Header/HeaderContainer\";\r\nimport ChatContainer from \"./components/Dialogues/Dialogue/ChatContainer\";\r\n\r\nconst ProfileContainer = React.lazy(() => import(\"./components/Profile/ProfileContainer\"));\r\nconst DialoguesContainer = React.lazy(() => import(\"./components/Dialogues/DialoguesContainer\"));\r\nconst UsersContainer = React.lazy(() => import(\"./components/Users/UsersContainer\"));\r\n\r\nclass App extends Component {\r\n\tcomponentDidMount() {\r\n\t\tthis.props.initializeApp();\r\n\t}\r\n\r\n\trender() {\r\n\t\tif (!this.props.initialized) {\r\n\t\t\treturn <Preloader />\r\n\t\t}\r\n\r\n\t\treturn (\r\n\t\t\t<div>\r\n\t\t\t\t<div className={s.bg_header} />\r\n\t\t\t\t<div className={s.app_wrapper}>\r\n\t\t\t\t\t<HeaderContainer />\r\n\t\t\t\t\t<NavbarContainer />\r\n\t\t\t\t\t<div className={s.content}>\r\n\t\t\t\t\t\t<Suspense fallback={\"\"}>\r\n\t\t\t\t\t\t\t<Routes>\r\n\t\t\t\t\t\t\t\t<Route path=\"/\"\r\n\t\t\t\t\t\t\t\t\telement={<ProfileContainer key={\"mainOne\"} />} />\r\n\t\t\t\t\t\t\t\t<Route path=\"/lotus-network\"\r\n\t\t\t\t\t\t\t\t\telement={<ProfileContainer key={\"mainTwo\"} />} />\r\n\t\t\t\t\t\t\t\t<Route path=\"/profile\"\r\n\t\t\t\t\t\t\t\t\telement={<ProfileContainer key={\"me\"} />} />\r\n\t\t\t\t\t\t\t\t<Route path=\"/messages\"\r\n\t\t\t\t\t\t\t\t\telement={<DialoguesContainer key={\"dialogues\"} />} />\r\n\t\t\t\t\t\t\t\t<Route path=\"/messages/*\"\r\n\t\t\t\t\t\t\t\t\telement={<ChatContainer key={\"chat\"} />} />\r\n\t\t\t\t\t\t\t\t<Route path=\"/users\"\r\n\t\t\t\t\t\t\t\t\telement={<UsersContainer key={\"users\"} />} />\r\n\t\t\t\t\t\t\t\t<Route path=\"/users/*\"\r\n\t\t\t\t\t\t\t\t\telement={<ProfileContainer key={\"user\"} />} />\r\n\t\t\t\t\t\t\t\t<Route path=\"/login\"\r\n\t\t\t\t\t\t\t\t\telement={<Login key={\"login\"} />} />\r\n\t\t\t\t\t\t\t</Routes>\r\n\t\t\t\t\t\t</Suspense>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n\tinitialized: state.app.initialized\r\n});\r\n\r\nlet AppContainer = compose(\r\n\tconnect(mapStateToProps, { initializeApp }))(App);\r\n\r\nconst LotusNetworkApp = () => {\r\n\treturn <BrowserRouter>\r\n\t\t<Provider store={store}>\r\n\t\t\t<AppContainer />\r\n\t\t</Provider>\r\n\t</BrowserRouter>\r\n};\r\n\r\nexport default LotusNetworkApp;","import \"./index.css\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\nimport React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport LotusNetworkApp from \"./App\";\r\n\r\nReactDOM.render(\r\n\t<LotusNetworkApp />,\r\n\tdocument.getElementById(\"root\")\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content_block\":\"Login_content_block__3YsJL\",\"caution\":\"Login_caution__1YYoO\",\"caution_data\":\"Login_caution_data__28Row\",\"login\":\"Login_login__bLk5W\",\"error\":\"Login_error__240Az\",\"incorrect\":\"Login_incorrect__koPh9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navbar_nav__1DeTU\",\"nav_top\":\"Navbar_nav_top__3uZvW\",\"nav_profile\":\"Navbar_nav_profile__24ziM\",\"nav_messages\":\"Navbar_nav_messages__1Mh-t\",\"nav_users\":\"Navbar_nav_users__3Rp5u\",\"nav_news\":\"Navbar_nav_news__1j46k\",\"nav_music\":\"Navbar_nav_music__joGD1\",\"nav_settings\":\"Navbar_nav_settings__3igNO\",\"nav_logOut\":\"Navbar_nav_logOut__A0PjG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header_top\":\"Header_header_top__18aZs\",\"header_left\":\"Header_header_left__2Az6p\",\"auth\":\"Header_auth__2ifOg\",\"not_auth\":\"Header_not_auth__1D8Vy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"bg_header\":\"App_bg_header__RcgjH\",\"app_wrapper\":\"App_app_wrapper__1j817\",\"content\":\"App_content__Oexyh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogue\":\"Dialogue_dialogue__3Geg1\",\"active\":\"Dialogue_active__25w-4\"};","export default __webpack_public_path__ + \"static/media/default-profile-picture.568a463a.png\";","import { profileAPI } from \"../api/api\";\r\n\r\nconst ADD_POST = \"lotus-network/profile/ADD_POST\";\r\nconst DELETE_POST = \"lotus-network/profile/DELETE_POST\";\r\nconst UPDATE_NEW_POST_TEXT = \"lotus-network/profile/UPDATE_NEW_POST_TEXT\";\r\nconst SET_USER_PROFILE = \"lotus-network/profile/SET_USER_PROFILE\";\r\nconst SET_STATUS = \"lotus-network/profile/SET_STATUS\";\r\nconst SAVE_PHOTO_SUCCESS = \"lotus-network/profile/SAVE_PHOTO_SUCCESS\";\r\n\r\n\r\nlet initialState = {\r\n\tposts: [\r\n\t\t{ id: 4, likes: 127, text: \"Everything gets caught in the light. There’s no escaping. In the traces of the flesh of the land everything swells in the glow of our orbiting star. A garden is a place of focus and growth. Undulating in the soil of the earth things transform and birth. Things get made by the hands of undefined forms. The roots of wonder wander the expectations of life’s intuition. The kinds of things that can be made are up to imaginations and esteemed focus. The world spins forward full of its happenstance and coincidence.\" },\r\n\t\t{ id: 3, likes: 21, text: \"I was different then, I don’t need them to be cool.\" },\r\n\t\t{ id: 2, likes: 15, text: \"It’s just a cigarette like you always used to do.\" },\r\n\t\t{ id: 1, likes: 15, text: \"Honey, don’t you love me and you know it makes me sad?\" },\r\n\t\t{ id: 0, likes: 19, text: \"It’s just a cigarette and it cannot be that bad.\" }\r\n\t],\r\n\tnewPostText: \"\",\r\n\tprofile: null,\r\n\tstatus: \"\"\r\n};\r\n\r\nconst profileReducer = (state = initialState, action) => {\r\n\tswitch (action.type) {\r\n\t\tcase ADD_POST:\r\n\t\t\tlet newPost = {\r\n\t\t\t\tid: state.posts.length,\r\n\t\t\t\tlikes: 0,\r\n\t\t\t\ttext: action.newPostText\r\n\t\t\t};\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tposts: [newPost, ...state.posts],\r\n\t\t\t\tnewPostText: \"\"\r\n\t\t\t}\r\n\t\tcase DELETE_POST:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tposts: state.posts.filter(p => p.id !== action.id)\r\n\t\t\t}\r\n\t\tcase UPDATE_NEW_POST_TEXT:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tnewPostText: action.newText\r\n\t\t\t}\r\n\t\tcase SET_USER_PROFILE:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tprofile: action.profile\r\n\t\t\t}\r\n\t\tcase SET_STATUS:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tstatus: action.status\r\n\t\t\t}\r\n\t\tcase SAVE_PHOTO_SUCCESS:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tprofile: { ...state.profile, photos: action.photos }\r\n\t\t\t}\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n};\r\n\r\nexport const addPostCreator = (text) => ({ type: ADD_POST, newPostText: text });\r\nexport const deletePost = (id) => ({ type: DELETE_POST, id });\r\nexport const updateNewPostTextCreator = (text) => ({ type: UPDATE_NEW_POST_TEXT, newText: text });\r\nexport const setUserProfile = (profile) => ({ type: SET_USER_PROFILE, profile });\r\nexport const setStatus = (status) => ({ type: SET_STATUS, status });\r\nexport const savePhotoSuccess = (photos) => ({ type: SAVE_PHOTO_SUCCESS, photos });\r\n\r\nexport const getProfile = (userId) => async (dispatch) => {\r\n\tlet response = await profileAPI.getProfile(userId);\r\n\tdispatch(setUserProfile(response.data));\r\n};\r\n\r\nexport const getStatus = (userId) => async (dispatch) => {\r\n\tlet response = await profileAPI.getStatus(userId);\r\n\tdispatch(setStatus(response.data));\r\n};\r\n\r\nexport const updateStatus = (status) => async (dispatch) => {\r\n\tlet response = await profileAPI.updateStatus(status);\r\n\tif (response.data.resultCode === 0) {\r\n\t\tdispatch(setStatus(status));\r\n\t}\r\n};\r\n\r\nexport const savePhoto = (file) => async (dispatch) => {\r\n\tlet response = await profileAPI.savePhoto(file);\r\n\tif (response.data.resultCode === 0) {\r\n\t\tdispatch(savePhotoSuccess(response.data.data.photos));\r\n\t}\r\n};\r\n\r\nexport default profileReducer;","export default __webpack_public_path__ + \"static/media/preloader.d9cf5de4.svg\";","import preloader from \"../../../img/icons/users/preloader.svg\";\r\n\r\nlet Preloader = () => {\r\n\treturn <img src={preloader} alt=\"Loading...\" />\r\n};\r\n\r\nexport default Preloader;"],"sourceRoot":""}